[tool.poetry]
name = "xleapp"
version = "0.2.1"
description = "Multiplaform Logs, Events, And Plists Parser"
authors = ["Jesse Spangenberger <azuleonyx@digitalforensics.io>"]
license = "MIT"

readme = "README.md"

homepage = "https://github.com/flamusdiu/xleapp"
repository = "https://github.com/flamusdiu/xleapp"
documentation = "https://github.com/flamusdiu/xleapp"

keywords = ["forensics", "dfir", "security", "framework"]

classifiers = [
  "Development Status :: 3 - Alpha",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Topic :: Security",
  "Topic :: Utilities",
  "Typing :: Typed"
]


[tool.poetry.dependencies]
Jinja2 = "^3.1.2"
PySimpleGUI = "^4.60.1"
PyYAML = "^6.0"
prettytable = "^3.3.0"
python = ">=3.9,<3.11"
python-magic-bin = "^0.4.14"
simplekml = "^1.3.6"
wrapt = "^1.14.1"

black = {version = "^22.6.0", optional = true}
darglint = {version = "^1.8.1", optional = true}
flake8 = {version = "^4.0.1", optional = true}
flake8-bandit = {version = "^3.0.0", optional = true}
flake8-bugbear = {version = "^22.7.1", optional = true}
flake8-builtins = {version = "2.1.0", optional = true}
flake8-commas = {version = "^2.1.0", optional = true}
flake8-comprehensions = {version = "^3.10.0", optional = true}
flake8-docstrings = {version = "^1.6.0", optional = true}
flake8-eradicate = {version = "^1.2.1", optional = true}
flake8-isort = {version = ">=4.1.1,<7.0.0", optional = true}
flake8-mutable = {version = "^1.2.0", optional = true}
flake8-quotes = {version = "^3.3.1", optional = true}
flake8-variables-names = {version = "^0.0.5", optional = true}
flakeheaven = {version = ">=2,<4", optional = true}
mypy = {version = ">=0.961,<1.3", optional = true}
pep8-naming = {version = "^0.13.0", optional = true}
pre-commit = {version = "^2.20.0", optional = true}
pyfakefs = {version = ">=4.6.3,<6.0.0", optional = true}
pyinstaller = {version = "^5.1", optional = true}
pytest = {version = ">=6.0.2,<8.0.0", optional = true}
pytest-cache = {version = "^1.0", optional = true}
pytest-cov = {version = ">=2.10.1,<5.0.0", optional = true}
pytest-dependency = {version = "^0.5.1", optional = true}
pytest-mock = {version = "^3.8.2", optional = true}
requests = {version = "^2.28.1", optional = true}
tox = {version = ">=3.23,<5.0", optional = true}
tqdm = {version = "^4.64.0", optional = true}
types-Jinja2 = {version = "^2.11.9", optional = true}
types-PyYAML = {version = "^6.0.9", optional = true}
atomicwrites = {version = "^1.4.1", optional = true}
sphinx-rtd-theme = {version = "^1.0.0", optional = true}
recommonmark = {version = "^0.7.1", optional = true}
sphinxcontrib-images = {version = "^0.9.4", optional = true}
sphinxcontrib-napoleon = {version = "^0.7", optional = true}
sphinxcontrib-mermaid = {version = "^0.7.1", optional = true}
click = "^8.1.3"


[tool.poetry.scripts]
xleapp = "xleapp.cli:cli"

[tool.flakeheaven]
# exclude chat_rendering.py until tested/fixed
exclude=["chat_rendering.py"]
format = "grouped"
max_line_length = 90
show_source = true
docstring-convention = "google"
inline_quotes = "double"
max_complexity = 13

# A003: ignore shared variables in a class
# D107: don't need docstrings for __init__ method of classes.
#       Infavor of documenting at the top of classes instead of inside __init__ methods.
# D203: 1 blank line required before class docstring.
# E203: Whitespace before ":"
# E611: No name %r in module %r
# E1101: %s %r has no %r member
# E401: Multiple imports on one line
# E1102: %s is not callable
# E1123: Passing unexpected keyword argument %r in function call
# F401: Module imported but unused.
# W503: Line breaks should occur after the binary operator to keep
#       all variable names aligned. Disabled infavor of W504 (PEP8 updates)
# Q000: Remove bad quotes
[tool.flakeheaven.plugins]
flake8-bandit = ["+*"]
flake8-bugbear = ["+*"]
flake8-builtins = ["+*", "-A003"]
flake8-commas = ["+*"]
flake8-comprehensions = ["+*"]
flake8-darglint = ["-+*"]
flake8-docstrings = ["-+*", "-D107"]
flake8-eradicate = ["+*"]
flake8-isort = ["+*"]
flake8-mutable = ["+*"]
flake8-quotes = ["+*", "-Q000"]
flake8-variables-names = ["+*"]
mccabe = ["+*"]
pep8-naming = ["+*"]
pycodestyle = ["+*", "-D203", "-W503", "-E501", "-E203"]
pyflakes = ["+*"]
pylint = ["+F*", "+E*", "-E0611", "-E1101", "-E0401", "-E1102", "-E1123"]

[tool.flakeheaven.exceptions."**/__init__.py"]
pyflakes = ["-F401", "-E501"]

[tool.flakeheaven.exceptions."**/gui/gui.py"]
mccabe = ["-C901"]

[tool.flakeheaven.exceptions."**/types.py"]
pyflakes = ["-F401"]

[tool.flakeheaven.exceptions."tests/**"]
flake8-bandit = ["+*", "-S101"]
flake8-docstrings = ["-+*", "-D107"]

[tool.flakeheaven.exceptions."docs/**"]
flake8-isort = ["-+*"]
pycodestyle = ["-+*"]

[tool.isort]
profile = "black"
atomic = true
lines_after_imports = 2
lines_between_types = 1
use_parentheses = true
line_length = 90
include_trailing_comma = true
skip = [".eggs",
        ".git",
        ".venv",
        "_build"]
src_paths = ["src, tests"]

[tool.black]
line_length = 90
include = '\.pyi?$'
target_version = ["py39"]
exclude = '''
/(
    | \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
)/
'''

[tool.mypy]
python_version = 3.10
strict_optional = true

[[tool.mypy.overrides]]
module = [
  "PySimpleGUI",
  "simplekml",
  "prettytable",
  "wrapt",
  "magic"
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.extras]
# Test dependencies as extras so they can be set as extras in tox config
# More info on https://github.com/python-poetry/poetry/issues/1941
tests = [
  "atomicwrites",
  "pre-commit",
  "pyfakefs",
  "pytest",
  "pytest-cache",
  "pytest-cov",
  "pytest-dependency",
  "pytest-mock",
  "requests",
  "tqdm",
  "tox"
]
vscode = [
  "requests",
  "tqdm"
]
lint = [
  "black",
  "flakeheaven",
  "flake8",
  "flake8-bandit",
  "flake8-bugbear",
  "flake8-commas",
  "flake8-comprehensions",
  "flake8-docstrings",
  "flake8-isort",
  "flake8-mutable",
  "flake8-quotes",
  "flake8-variables-names",
  "flake8-builtins",
  "flake8-eradicate",
  "pep8-naming",
  "darglint",
  "types-PyYAML",
  "types-Jinja2",
]
exe = [
  "mypy",
  "pyinstaller"
]
docs = [
  "recommonmark",
  "sphinx_rtd_theme",
  "sphinxcontrib-napoleon",
  "sphinxcontrib-mermaid",
  "sphinxcontrib-images"
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-vv --cov=xleapp --cov-report xml --cov-report html --ignore=data"
testpaths = [
  "tests",
]
